ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
View(data)
newdata<-data%>%
dplyr::select(Sex, Fare)
survived_pred<-predict(fit_logit, newdata)
range(survived_pred)
survived_pred<-predict(fit_logit, newdata)
survived_prob<-exp(survived_pred)/(e+exp(survived_pred))
survived_pred<-predict(fit_logit, newdata)
survived_prob<-exp(survived_pred)/(1+exp(survived_pred))
data %>%
ggplot(aes(x=Fare, y=survived_prob, color = Sex))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
plot(data$Fare, data$Survived)
curve(predict(fit_logit, newdata), add = TRUE)
install.packages("popbio")
library(popbio)
logi.hist.plot(data$Survived, data$Fare, logi.mod = 1)
fit_logit<-glm(Survived ~ Fare + Sex, data = data, family = binomial(link = "logit"))
summary(fit_logit)
newdata<-data%>%
dplyr::select(Sex, Fare)
# xfare<-seq(0,520,1)
survived_pred<-predict(fit_logit, newdata)
newdata$survived_prob<-exp(survived_pred)/(1+exp(survived_pred))
View(newdata)
newdata %>%
ggplot(aes(x=Fare, y=survived_prob, color = Sex))+
geom_jitter(height = 0.03)+
geom_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
newdata %>%
ggplot(aes(x=Fare, y=survived_prob))+
geom_jitter(height = 0.03)+
geom_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
newdata %>%
ggplot(aes(x=Fare, y=survived_prob))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
data %>%
ggplot(aes(x=Fare, y=Survived))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
data %>%
ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
data %>%
ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "probit")), se = FALSE)
plot(Survived ~ Fare + Sex, data = data)
plot(Survived ~ Fare + Sex, data = data)
lines(Survived ~ Fare + Sex, newdata, lwd = 2)
plot(Survived ~ Fare + Sex, data = data)
lines(survived_prob ~ Fare + Sex, newdata, lwd = 2)
plot(Survived ~ Fare, data = data)
lines(survived_prob ~ Fare, newdata, lwd = 2)
data %>%
ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
newdata %>%
ggplot(aes(x=Fare, y=survived_prob, color = Sex))+
geom_jitter(height = 0.03)+
geom_line()
newdata %>%
ggplot(aes(x=Fare, y=survived_prob, color = Sex))+
geom_jitter(height = 0.03)+
geom_line(lwd=2)
newdata %>%
ggplot(aes(x=Fare, y=survived_prob, color = Sex))+
geom_jitter(height = 0.03)+
geom_line()
plotting_dfm <- expand.grid(Fare = seq(from(min(data$Fare), to = max(data$Fare), by=0.1)),
Sex = (0:1))
plotting_dfm <- expand.grid(Fare = seq(from=min(data$Fare), to = max(data$Fare), by=0.1),
Sex = (0:1))
plotting_dfm$preds <- plogis(predict(fit_logit , newdata=plotting_dfm))
plotting_dfm <- expand.grid(Fare = seq(from=min(data$Fare), to = max(data$Fare), by=0.1),
Sex = as.factor(0:1))
plotting_dfm$preds <- plogis(predict(fit_logit , newdata=plotting_dfm))
newdata$fare_range<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
newdat$fare_range<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
fare_range<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
new_sex<-runif(length(fare_range),min = 0, max = 1)
new_sex
new_sex<-rbinom(length(fare_range), 1, 0.5)
new_sex
fare_range<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
new_sex<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(fare_range, new_sex))
survived_pred<-predict(fit_logit, new_data, type = "response")
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
Sex<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(Fare, Sex))
survived_pred<-predict(fit_logit, new_data, type = "response")
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
Sex<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(Fare, as.factor(Sex)))
survived_pred<-predict(fit_logit, new_data, type = "response")
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
Sex<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(Fare, Sex))
new_data$Sex<-as.factor(new_data$Sex)
survived_pred<-predict(fit_logit, new_data, type = "response")
data<-dat %>%
na.omit() %>%
dplyr::select(Sex, Fare, Survived)
fit_logit<-glm(Survived ~ Fare + Sex, data = data, family = binomial(link = "logit"))
summary(fit_logit)
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
Sex<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(Fare, Sex))
survived_pred<-predict(fit_logit, new_data, type = "response")
fit_lm<-lm(Survived ~ Fare * Sex, data = data)
summary(fit_lm)
data %>%
ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)+
geom_smooth(method = "lm")
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
new_data<-as.data.frame(Fare)
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
Sex_num<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(Fare,Sex_num))
for (i in 1:length(Fare)){
if (new_data$Sex_num[i] == 0){
new_data$Sex[i]<-"Female"
} else{
new_data$Sex[i]<-"Male"
}
}
View(newdata)
View(data)
survived_pred<-predict(fit_logit, new_data, type = "response")
data<-dat %>%
na.omit() %>%
dplyr::select(Sex, Fare, Survived)
glimpse(data)
fit_logit<-glm(Survived ~ Fare + Sex, data = data, family = binomial(link = "logit"))
survived_pred<-predict(fit_logit, new_data, type = "response")
summary(fit_logit)
new_data$Sex<-as.factor(new_data$Sex)
survived_pred<-predict(fit_logit, new_data, type = "response")
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
Sex_num<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(Fare,Sex_num))
for (i in 1:length(Fare)){
if (new_data$Sex_num[i] == 0){
new_data$Sex[i]<-"female"
} else{
new_data$Sex[i]<-"male"
}
}
survived_pred<-predict(fit_logit, new_data, type = "response")
new_data$survived_prob<-exp(survived_pred)/(1+exp(survived_pred))
new_data %>%
ggplot(aes(x=Fare, y=survived_prob, color = Sex))+
geom_jitter(height = 0.03)+
geom_line()
new_data %>%
ggplot(aes(x=Fare, y=survived_prob, color = as.factor(Sex)))+
geom_point())+
new_data %>%
ggplot(aes(x=Fare, y=survived_prob, color = as.factor(Sex)))+
geom_point()+
geom_line()
Fare<-seq(from = min(data$Fare), to = max(data$Fare), by = 0.1)
Sex_num<-rbinom(length(fare_range), 1, 0.5)
new_data<-as.data.frame(cbind(Fare,Sex_num))
for (i in 1:length(Fare)){
if (new_data$Sex_num[i] == 0){
new_data$Sex[i]<-"female"
} else{
new_data$Sex[i]<-"male"
}
}
survived_pred<-predict(fit_logit, new_data, type = "response")
#new_data$survived_prob<-exp(survived_pred)/(1+exp(survived_pred))
new_data$survived_prob<-survived_pred
new_data %>%
ggplot(aes(x=Fare, y=survived_prob, color = as.factor(Sex)))+
geom_point()+
geom_line()
data %>%
ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)+
stat_smooth(method = "glm", method.args = list(family = binomial(link = "logit")), se = FALSE)
plot(log(x),y)
y<-c(1,6,16,23,27,39,31,30,43,51,63,70,88,97,91,104,110,113,149,159)
x<-1:20
n1<-glm(y~log(x), family = poisson (link = log))
plot(log(x), y)
lines(log(x), exp(n1$fit))
y<-c(1,6,16,23,27,39,31,30,43,51,63,70,88,97,91,104,110,113,149,159)
x<-1:20
n1<-glm(y~log(x), family = poisson (link = log))
plot(log(x), y)
lines(log(x),n1$fit)
p<-data %>%
ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)
P+geom_smooth(method = "lm")
p<-data %>%
ggplot(aes(x=Fare, y=Survived, color = Sex))+
geom_jitter(height = 0.03)
p+geom_smooth(method = "lm")
p+new_data %>%
ggplot(aes(x=Fare, y=survived_prob, color = as.factor(Sex)))+
geom_point()+
geom_line()
plot(data$Fare, data$Survived, col = data$Sex)
50*log(50)
library(dplyr)
library(GGally)
library(ggplot2)
library(Lahman)
library(tidyverse)
team <- Teams %>%
dplyr::select(R, BB, H, Teams)%>%
na.omit()
team <- Teams %>%
dplyr::select(R, BB, H, teamID)%>%
na.omit()
View(team)
team <- Teams %>%
filter(yearID >=1990)%>%
dplyr::select(R, BB, H, teamID)%>%
na.omit()
team$teamID<-as.factor(team$teamID)
install.packages("lme4")
library(dplyr)
library(lme4)
library(ggplot2)
library(Lahman)
library(tidyverse)
fit<-glmer(R ~ BB + H + (1 |teamID), data = team, family = poisson)
data(Machines)
install.packages("nlme")
install.packages("nlme")
library(nlme)
data("Machines")
Machines
lm<-lm(R ~ H*team), data = team)
lm<-lm(R ~ H*team, data = team)
glance(team)
glimpse(team)
lm<-lm(R ~ H*teamID, data = team)
plot(lm, which = 1)
lme<-glmer(R ~ BB + (1 + H|teamID), data = team, family = poisson)
lme<-glmer(R ~ H + (1 + H|teamID), data = team, family = poisson)
lme<-glmer(R ~ H + (1 + H|teamID), data = team)
lme<-lmer(R ~ H + (1 + H|teamID), data = team)
library(dplyr)
library(lme4)
library(ggplot2)
library(Lahman)
library(tidyverse)
boxplot(R ~ H*teamID)
boxplot(R ~ H*teamID, data = team)
boxplot(team$R ~ team$H*team$teamID)
library(dplyr)
library(lme4)
library(ggplot2)
library(Lahman)
library(tidyverse)
team <- Teams %>%
filter(yearID >=1990)%>%
dplyr::select(R, BB, H, teamID)%>%
na.omit()
team$teamID<-as.factor(team$teamID)
#fit<-glmer(R ~ BB + H + (1 |teamID), data = team, family = poisson)
boxplot(team$R ~ team$H*team$teamID)
team <- Teams %>%
filter(yearID >=1990)%>%
dplyr::select(R, BB, H, teamID)%>%
na.omit()
team$teamID<-as.factor(team$teamID)
fit<-glmer(R ~ BB + H + (1 |teamID), data = team, family = poisson)
fit<-lmer(R ~ I(scale(BB)) + I(scale(H)) + (1 |teamID), data = team)
team <- Teams %>%
filter(yearID >=1990)%>%
dplyr::select(R, BB, H, teamID)%>%
na.omit()
team$teamID<-as.factor(team$teamID)
fit<-lmer(R ~ I(scale(BB)) + I(scale(H)) + (1 |teamID), data = team)
summary(fit)
coefficients(fit)
summary(fit)
plot(fit, which = 1)
plot(lme, which = 1)
lme<-lmer(R ~ H + (1 + H|teamID), data = team) # effect on intercept and slope
lme<-lmer(R ~ I(scale(H)) + (1 + I(scale(H))|teamID), data = team) # effect on intercept and slope
plot(lme, which = 1)
plot(lm, which = 1)
lm<-lm(R ~ H*teamID, data = team)
plot(lm, which = 1)
knitr::opts_chunk$set(echo = TRUE)
library(mclust)
library(tidyverse)
library(flexclust)
# Mclust
data<-readRDS("data/clusterData.rds")
data<-matrix(unlist(data), nrow=500, ncol=2)
mod1<- Mclust(data, G = 1:9)
summary(mod1)
# Plot the clusters and density
plot(mod1, what= "classification")
plot(mod1, what= "density")
plotDensityMclust2(mod1, data= data)
0.68*-0.74
var(5.3,0.3,2.8)
var(c(5.3,0.3,2.8)
)
library(shiny)
library(gapminder)
library(ggplot2)
library(dplyr)
survey <- read.csv("data/survey")
survey <- read.csv("data/survey.csv")
survey <- read.csv("../data/survey.csv")
survey <- read_csv("../data/survey.csv")
library(readr)
survey <- read_csv("../data/survey.csv")
setwd("C:/Users/I834598/Desktop/mental_explorer/mental_explorer")
survey <- read_csv("../data/survey.csv")
glimpse(survey)
range(survey$no_employees)
a<-survey$no_employees
a<-as.factor
a<-as.factor(a)
unique(survey$no_employees)
table(survey$Country)
unique(survey$remote_work)
unique(survey$benefits)
unique(survey$seek_help)
unique(survey$anonymity)
unique(survey$leave)
unique(survey$treatment)
unique(survey$Gender)
runApp()
library(stringr)
runApp()
runApp()
runApp()
runApp()
runApp()
survey$Gender<-str_replace_all(survey$Gender,"female","Female")
survey$Gender<-str_replace_all(survey$Gender,"f","Female")
survey$Gender<-str_replace_all(survey$Gender,"F","Female")
survey$Gender<-str_replace_all(survey$Gender,"woman","Female")
survey$Gender<-str_replace_all(survey$Gender,"Woman","Female")
survey$Gender<-str_replace_all(survey$Gender,"Female","Female")
survey$Gender<-str_replace_all(survey$Gender,"Femake","Female")
survey$Gender<-str_replace_all(survey$Gender,"M","Male")
survey$Gender<-str_replace_all(survey$Gender,"m","Male")
survey$Gender<-str_replace_all(survey$Gender,"male","Male")
survey$Gender<-str_replace_all(survey$Gender,"Mal","Male")
survey$Gender<-str_replace_all(survey$Gender,"Man","Male")
table(survey$Gender)
survey <- read_csv("../data/survey.csv")
survey <- read_csv("../data/survey.csv")
# Data wrangling
survey$Gender<-str_replace_all(survey$Gender,"\\<female\\>","Female")
survey$Gender<-str_replace_all(survey$Gender,"\\<f\\>","Female")
table(survey$Gender)
sorted(table(survey$Gender))
sort(table(survey$Gender))
survey$Gender<-gsub("\\<f\\>","Female",survey$Gender)
sort(table(survey$Gender))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unique(survey$Age)
range(survey$Age)
summary(survey$Age)
survey$Age
survey <- read_csv("../data/survey.csv")
survey$Age
as.integer(survey$Age)
View(survey)
survey<-survey %>%
as.integer(Age)%>%
filter(Age <= 0)
survey <- read_csv("../data/survey.csv")
survey<-survey %>%
as.integer(Age)%>%
filter(Age >= 0)
survey$Age<-as.integer(survey$Age)
range(survey$Age)
survey <- read_csv("../data/survey.csv")
survey$age_group <- cut(survey$age, c(0:100, 10))
survey$age_group <- cut(survey$Age, c(0:100, 10))
c(0:100, 10)
survey$age_group <- cut(survey$Age, seq(0,100,10))
survey$age_group
table(survey$age_group)
survey$age_group <- as.character(cut(survey$Age, breaks = c(20,30,40,50,60,Inf),
labels=c('20-29', '30-39', '40-49', '50-59', 'Over 60')))
table(survey$age_group)
install.packages("HH")
library(HH)
library(likert)
install_github('likert')
library(devtools)
install_github('likert')
install_github('likert', 'jbryer')
install_github('jbryer/likert')
library(likert)
runApp()
runApp()
runApp()
runApp()
runApp()
survey <- read_csv("../data/survey.csv")
# Data wrangling
survey$Gender<-gsub("\\<f\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<F\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<female\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<Woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<m\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<M\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<male\\>","Male",survey$Gender)
survey<-survey%>%
filter(Gender %in% c("Female", "Male"))
# Create age group
survey$age_group <- as.character(cut(survey$Age, breaks = c(20,30,40,50,60,Inf),
labels=c('20-29', '30-39', '40-49', '50-59', 'Over 60')))
View(survey)
survey <- read_csv("../data/survey.csv")
# Data wrangling
survey$Gender<-gsub("\\<f\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<F\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<female\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<Woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<m\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<M\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<male\\>","Male",survey$Gender)
# Create age group
survey$age_group <- as.character(cut(survey$Age, breaks = c(20,30,40,50,60,Inf),
labels=c('20-29', '30-39', '40-49', '50-59', 'Over 60')))
survey<-survey%>%
filter(Gender %in% c("Female", "Male"))%>%
filter(is.na(age_group))
View(survey)
survey <- read_csv("../data/survey.csv")
# Data wrangling
survey$Gender<-gsub("\\<f\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<F\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<female\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<Woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<m\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<M\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<male\\>","Male",survey$Gender)
# Create age group
survey$age_group <- as.character(cut(survey$Age, breaks = c(20,30,40,50,60,Inf),
labels=c('20-29', '30-39', '40-49', '50-59', 'Over 60')))
survey<-survey%>%
filter(Gender %in% c("Female", "Male"))%>%
filter(!is.na(age_group))
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(readr)
library(stringr)
library(ggplot2)
library(dplyr)
survey <- read_csv("../data/survey.csv")
# Data wrangling
survey$Gender<-gsub("\\<f\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<F\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<female\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<Woman\\>","Female",survey$Gender)
survey$Gender<-gsub("\\<m\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<M\\>","Male",survey$Gender)
survey$Gender<-gsub("\\<male\\>","Male",survey$Gender)
# Create age group
survey$age_group <- as.character(cut(survey$Age, breaks = c(20,30,40,50,60,Inf),
labels=c('20-29', '30-39', '40-49', '50-59', 'Over 60')))
survey<-survey%>%
filter(Gender %in% c("Female", "Male"))%>%
filter(!is.na(age_group))
View(survey)
runApp()
runApp()
runApp()
runApp('C:/Users/I834598/Desktop/test')
runApp()
runApp('C:/Users/I834598/Desktop/test')
